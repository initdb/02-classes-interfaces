@startuml
interface SimpleFilter {
	+boolean include(Object payload)
}

interface Iterable {
	+Iterator iterator()
}

interface Iterator {
	+boolean hasNext()
    +Object next()
}

interface SimpleList {
    +void add(Object payload)
    +int size()
    +SimpleList filter(SimpleFilter filter)_
}

class SimpleListImpl implements SimpleList, Iterable {
	-head : Element
	+void add(Object payload)
    +int size()
    +SimpleList filter(SimpleFilter filter)
}

-class SimpleIteratorImpl implements Iterator {
}

-class Element {
	-payload: Object
    -next: Element
}

Element --* SimpleListImpl : head
Element --* Element : next
Element --+ SimpleListImpl
SimpleFilter <.. SimpleList
SimpleIteratorImpl --+ SimpleListImpl
@enduml